{"version":3,"file":"static/js/239.8bdf3883.chunk.js","mappings":"sPACA,EAA6B,iCAA7B,EAAiF,uCAAjF,EAAgJ,4CAAhJ,EAAoM,4B,SCgCpM,EA9BqB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,aACtB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KASA,OACE,kBAAMC,KAAK,SAASC,UAAWC,EAAmBC,SAT/B,SAAAC,GACnBA,EAAEC,iBACFT,EAAaE,GACbC,EAAS,GACV,EAKC,WACE,kBACEO,SANe,SAAC,GAA2B,IAAfR,EAAc,EAAxBS,OAAUT,MAChCC,EAASD,EACV,EAKKA,MAAOA,EACPU,KAAK,SACLP,UAAWC,EACXO,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQH,KAAK,SAASP,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,SAA+C,eAItD,E,0BCmBD,EA1CmB,WACjB,OAAoCL,EAAAA,EAAAA,UAAS,IAA7C,eAAOe,EAAP,KAAmBC,EAAnB,KACA,GAA4BhB,EAAAA,EAAAA,WAAS,GAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAcC,EAAAA,EAAAA,UAAQ,kBAAMH,EAAOI,IAAI,SAAjB,GAA4B,CAACJ,IACnDK,GAAoBC,EAAAA,EAAAA,cAAW,iBAAC,sGAElCR,GAAU,GAFwB,UAGfS,EAAAA,EAAAA,IAAiBL,GAHF,OAG5BM,EAH4B,OAI5BC,EAAUD,EAAKE,KAAI,SAAAC,GAAI,MAAK,CAChCC,GAAID,EAAKC,GACTC,eAAgBF,EAAKE,eAFM,IAK7BjB,GAAc,OAAIa,IAClBX,GAAU,GAVwB,kDAYlCgB,QAAQC,IAAI,QAAZ,MACAjB,GAAU,GAbwB,0DAenC,CAACI,KACJc,EAAAA,EAAAA,YAAU,WACRd,GAAeG,GAChB,GAAE,CAACH,EAAaG,IAMjB,OACE,4BACE,SAAC,EAAD,CAAc1B,aANG,SAAAsC,GACnBhB,EAAU,CAAEiB,OAAQD,IACpBrB,EAAc,GACf,IAIIC,IAAU,SAACsB,EAAA,EAAD,KACTtB,GAAgC,IAAtBF,EAAWyB,QAAgBlB,GACrC,wBAAI,eAEJ,SAACmB,EAAA,EAAD,CAAY1B,WAAYA,MAI/B,C","sources":["webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.jsx","pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchMovies_SearchForm__+8CwD\",\"SearchFormButton\":\"SearchMovies_SearchFormButton__wNM+d\",\"SearchFormButtonLabel\":\"SearchMovies_SearchFormButtonLabel__qd0Bm\",\"input\":\"SearchMovies_input__1c5BI\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport styled from './SearchMovies.module.css';\nconst SearchMovies = ({ handleSearch }) => {\n  const [value, setValue] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleSearch(value);\n    setValue('');\n  };\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n  return (\n    <form role=\"search\" className={styled.SearchForm} onSubmit={handleSubmit}>\n      <input\n        onChange={handleChange}\n        value={value}\n        type=\"search\"\n        className={styled.input}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <button type=\"submit\" className={styled.SearchFormButton}>\n        <span className={styled.SearchFormButtonLabel}>Search</span>\n      </button>\n    </form>\n  );\n};\nSearchMovies.propTypes = {\n  handleSearch: PropTypes.func.isRequired,\n};\nexport default SearchMovies;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieBySearch } from 'ThemoviedbAPI/ThemoviedbAPI';\nimport Loader from 'components/Loader/Loader';\nconst MoviesPage = () => {\n  const [moviesData, setMoviesData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [params, setParams] = useSearchParams();\n  const searchQuery = useMemo(() => params.get('search'), [params]);\n  const handleSearchMovie = useCallback(async () => {\n    try {\n      setLoader(true);\n      const data = await getMovieBySearch(searchQuery);\n      const newData = data.map(item => ({\n        id: item.id,\n        original_title: item.original_title,\n      }));\n\n      setMoviesData([...newData]);\n      setLoader(false);\n    } catch (error) {\n      console.log('error', error);\n      setLoader(false);\n    }\n  }, [searchQuery]);\n  useEffect(() => {\n    searchQuery && handleSearchMovie();\n  }, [searchQuery, handleSearchMovie]);\n\n  const handleSearch = query => {\n    setParams({ search: query });\n    setMoviesData([]);\n  };\n  return (\n    <div>\n      <SearchMovies handleSearch={handleSearch} />\n      {loader && <Loader />}\n      {!loader && moviesData.length === 0 && searchQuery ? (\n        <h2>Not found</h2>\n      ) : (\n        <MoviesList moviesData={moviesData} />\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["handleSearch","useState","value","setValue","role","className","styled","onSubmit","e","preventDefault","onChange","target","type","autoComplete","autoFocus","placeholder","moviesData","setMoviesData","loader","setLoader","useSearchParams","params","setParams","searchQuery","useMemo","get","handleSearchMovie","useCallback","getMovieBySearch","data","newData","map","item","id","original_title","console","log","useEffect","query","search","Loader","length","MoviesList"],"sourceRoot":""}